 <div class="modal fade" id="validateBiographyModal" tabindex="-1" role="dialog" aria-labelledby="validateBiographyModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="validateBiographyModalLabel">{{ "biography.admin.SelectBiography"|trans([], "validators") }}</h4>
        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="create-new-biography">{{ "biography.admin.SelectNothing"|trans([], "validators") }}</button>
      </div>
    </div>
  </div>
</div>

<script>
	function addDeleteButtonFormDeleteLink($tagFormLi) {
		var $removeFormButton = new DOMParser().parseFromString('<button type="button" class="btn btn-danger mt-2 float-end"><i class="fas fa-trash"></i></button>', 'text/html').documentElement.querySelector('body').firstChild;

		$tagFormLi.appendChild($removeFormButton);

		$removeFormButton.addEventListener('click', (e) => {
			$tagFormLi.remove();
		});
	}

	function addBiographyValidationFormDisplayLink($tagFormLi, count) {
		let internationalName = $tagFormLi.querySelector(".international-name");
		let biography = $tagFormLi.querySelector(".biography");

		let element = $tagFormLi.querySelector("*");

		if(typeof element.dataset.internationalName !== "undefined" && internationalName.value == "")
			internationalName.value = element.dataset.internationalName;

		if(count == 0 && internationalName.value == "")
			internationalName.value = "+";

		if (count == 0 || internationalName.value != "")
			var $validateFormButton = new DOMParser().parseFromString('<button type="button" class="btn btn-success mt-2 float-start choose-biography" title="{{ 'biography.admin.BiographyValidated'|trans([], 'validators') }}"><i class="fas fa-check state-biography"></i></button>', 'text/html').documentElement.querySelector('body').firstChild;
		else
			var $validateFormButton = new DOMParser().parseFromString('<button type="button" class="btn btn-secondary mt-2 float-start choose-biography" title="{{ 'biography.admin.YouMustValidateThisBiography'|trans([], 'validators') }}"><i class="far fa-minus-square state-biography"></i></button>', 'text/html').documentElement.querySelector('body').firstChild;

		var $duplicateButton = new DOMParser().parseFromString('<button type="button" class="btn btn-warning mt-2 me-2 float-start duplicate-biography" title="{{ 'biography.admin.Duplicate'|trans([], 'validators') }}"><i class="fas fa-clone"></i></button>', 'text/html').documentElement.querySelector('body').firstChild;
		$tagFormLi.appendChild($duplicateButton);
		
		$duplicateButton.addEventListener('click', (e) => {
			var idContainer = addNewBiography(document.querySelector('.add-another-collection-widget').getAttribute("data-list-selector"));

			var divContainer = $tagFormLi.querySelector("div");
			
			var wikidataCopy = divContainer.dataset.wikidata;
			var titleCopy = divContainer.dataset.title;

			var formContainer = '<form name="temp_form">' + divContainer.outerHTML + "</form>";

			var temp = document.createElement('div');
			temp.innerHTML = formContainer;
			var htmlObject = temp.firstChild;
			
			const regex = /[\d]/;

			var data = new FormData(htmlObject);
			for (var [key, value] of data) {
				newKey = key.replace(regex, idContainer);
				let keyObject = document.querySelector("[name='" + key + "']");
				let newKeyObject = document.querySelector("[name='" + newKey + "']");

				if(document.querySelector("[name='" + key + "']").classList.contains("select2entity")) {
					var $newOption = $("<option selected='selected'></option>").val(keyObject.value).text(keyObject.options[keyObject.selectedIndex].text);
					$("[name='" + newKey + "']").append($newOption).trigger('change');
				}
				document.querySelector("[name='" + newKey + "']").value = document.querySelector("[name='" + key + "']").value
			}
			
			var newContainer = document.getElementById(divContainer.getAttribute("id").replace(regex, idContainer)).parentNode;
			var divNewContainer = newContainer.querySelector("div");
			divNewContainer.setAttribute('data-wikidata', wikidataCopy);
			divNewContainer.setAttribute('data-title', titleCopy);
			addBiographyValidationFormDisplayLink(newContainer, idContainer)
		});

		$tagFormLi.appendChild($validateFormButton);
		
		addDeleteButtonFormDeleteLink($tagFormLi);

		$validateFormButton.addEventListener('click', (e) => {
			document.querySelector("#validateBiographyModal .modal-body").innerHTML = "";
			let xmlHttp = new XMLHttpRequest();
			xmlHttp.onreadystatechange = function() {
				if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
					let data = xmlHttp.responseText;

					document.querySelector("#validateBiographyModal .modal-body").appendChild(document.createRange().createContextualFragment(data));
					document.getElementById("validateBiographyModal").setAttribute("data-input", internationalName.getAttribute("id"));
					document.getElementById("validateBiographyModal").setAttribute("data-biography", biography.getAttribute("id"));
					$("#validateBiographyModal").modal("show");
		
					document.getElementById("create-new-biography").addEventListener("click", (e) => {
						document.getElementById(document.getElementById("validateBiographyModal").dataset.input).value = "+";
						$("#validateBiographyModal").modal("hide");
					});
		
					$('#validateBiographyModal').on('hidden.bs.modal', function (e) {
						if (document.getElementById(document.getElementById("validateBiographyModal").dataset.input).value != "") {
							$validateFormButton.classList.add("btn-success");
							$validateFormButton.classList.remove("btn-secondary");
							
							$validateFormButton.querySelector(".state-biography").classList.add("fas");
							$validateFormButton.querySelector(".state-biography").classList.remove("far");
							$validateFormButton.querySelector(".state-biography").classList.add("fa-check");
							$validateFormButton.querySelector(".state-biography").classList.remove("fa-minus-square");
						}
					});
				}
			}
			
			let language = {% if languageId is defined %}{{ languageId }}{% else %}document.getElementById("{{ language }}").value{% endif %};
			let wikidata = element.dataset.wikidata;

			xmlHttp.open("GET", "{{ path('Biography_Admin_Validate') }}?wikidata=" + (typeof wikidata !== "undefined" ? wikidata : "") + "&title=" + encodeURIComponent(element.dataset.title) + "&language=" + language, false);
			xmlHttp.send();
		});
	}

	function addNewBiography(selector) {
		var list = document.querySelector(selector);
		var counter = list.getAttribute('data-widget-counter') || list.children.length;
		var newWidget = list.getAttribute('data-prototype');

		newWidget = newWidget.replace(/__name__/g, counter);
		counter++;
		list.setAttribute('data-widget-counter', counter);

		var newElem = new DOMParser().parseFromString(list.getAttribute('data-widget-tags'), 'text/html').documentElement.querySelector('body').firstChild;
		
		newElem.innerHTML = newWidget;

		newElem.classList.add("border", "p-2", "bg-light", "mb-2", "clearfix", "container-form-biography");

		list.appendChild(document.createRange().createContextualFragment(newElem.outerHTML));

		var id = new DOMParser().parseFromString(newWidget, 'text/html').documentElement.querySelector('body').firstChild.getAttribute("id");

		$("#" + id + "_biography").select2entity();

		$(document).on('select2:selecting', "#" + id + "_biography", function(e) {
			let val = e.params.args.data;
			let count = 0;

			if(typeof val.internationalName === "undefined") {
				document.getElementById(id).parentNode.value = "+";
				document.getElementById(id).setAttribute("data-title", val.id.replace(/_*/,''));
			}
			else {
				document.getElementById(id).setAttribute("data-wikidata", val.wikidata);
				document.getElementById(id).setAttribute("data-title", val.title);
				count = 1;
			}

			document.getElementById(id + "_internationalName").value = "";
			
			if(document.getElementById(id) != null && document.getElementById(id).parentNode.querySelector(".state-biography") != null)
				document.getElementById(id).parentNode.querySelector(".state-biography").parentNode.remove();
				
			addBiographyValidationFormDisplayLink(document.getElementById(id).parentNode, count);
		});

		addDeleteButtonFormDeleteLink(newElem);
		
		let idArray = id.split("_");
		
		return idArray[idArray.length - 1];
	}

	$(function() {
		document.querySelector('.add-another-collection-widget').addEventListener("click", (e) => {
			addNewBiography(e.currentTarget.getAttribute('data-list-selector'));
		});

		$collectionHolder = document.querySelectorAll('ul#biography-fields-list li.container-form-biography');

		$collectionHolder.forEach((e) => {
			addBiographyValidationFormDisplayLink(e);
		});
	});
</script>
{% import "admin/GenericAdmin/macro.html.twig" as macro_admin %}

<div class="form-table-cell form-table-cell-head">{{ form_label(form.title, "directory.admin.Title"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.title) }}{{ form_widget(form.title, { 'attr': {'class': 'form-control'} }) }}</div>

{{ macro_admin.wikidata_html_generic(form) }}

<div class="form-table-cell form-table-cell-head">{{ form_label(form.link, "directory.admin.Link"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.link) }}{{ form_widget(form.link, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.illustration, "directory.admin.Logo"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.illustration) }}{{ form_widget(form.illustration, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.websiteLanguage, "directory.admin.WebsiteLanguage"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.websiteLanguage) }}{{ form_widget(form.websiteLanguage, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.language, "directory.admin.Language"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.language) }}{{ form_widget(form.language, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.text, "directory.admin.Description"|trans([], "validators")) }}</div>
<div class="form-table-cell">
	{{ macro_admin.import_wikipedia(form.text.vars.id, form.source.vars.id) }}
	{{ form_errors(form.text) }}{{ form_widget(form.text) }}
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.foundedYear, "directory.admin.FoundedYear"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.foundedYear) }}{{ form_widget(form.foundedYear, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.defunctYear, "directory.admin.DefunctYear"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.defunctYear) }}{{ form_widget(form.defunctYear, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.socialNetwork, "directory.form.SocialNetworks"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.socialNetwork) }}{{ form_widget(form.socialNetwork, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.source, "directory.admin.Sources"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.source) }}{{ form_widget(form.source) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.state, "directory.admin.State"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.state) }}{{ form_widget(form.state, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.licence, "directory.admin.Licence"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.licence) }}{{ form_widget(form.licence, { 'attr': {'class': 'form-select'} }) }}</div>

<script>
	document.getElementById("wikidata").addEventListener("click", (e) => {
		e.preventDefault();
		let locale = document.getElementById("{{ form.language.vars.id }}").value;
		let code = document.getElementById("{{ form.wikidata.vars.id }}").value;

		if (code == "")
			return;

		let xmlHttp = new XMLHttpRequest();
		
		document.querySelector('#wikidata .fa-arrows-rotate').classList.add("fa-spin");
		
		xmlHttp.onreadystatechange = function() {
			if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
				let data = JSON.parse(xmlHttp.responseText);

				document.getElementById("{{ form.title.vars.id }}").value = data.title;
				document.getElementById("{{ form.foundedYear.day.vars.id }}").value = data.foundedDate.day;
				document.getElementById("{{ form.foundedYear.month.vars.id }}").value = data.foundedDate.month;
				document.getElementById("{{ form.foundedYear.year.vars.id }}").value = data.foundedDate.year;
				document.getElementById("{{ form.defunctYear.day.vars.id }}").value = data.defunctDate.day;
				document.getElementById("{{ form.defunctYear.month.vars.id }}").value = data.defunctDate.month;
				document.getElementById("{{ form.defunctYear.year.vars.id }}").value = data.defunctDate.year;
				document.getElementById("{{ form.link.vars.id }}").value = data.link;
				document.getElementById("{{ form.wikidata.vars.id }}").value = data.code;
				
				document.getElementById("url_{{ form.text.vars.id }}").value = data.url;
				document.getElementById("url_{{ form.text.vars.id }}").dispatchEvent(new Event("change"));
				
				document.getElementById("{{ form.licence.vars.id }}").value = data.licence;

				editor{{ form.socialNetwork.vars.id }}.setValue(data.socialNetwork)
				document.getElementById("{{ form.socialNetwork.vars.id }}").value = JSON.stringify(data.socialNetwork);
				reload{{ form.socialNetwork.vars.id }}(data);

				if(document.getElementById("{{ form.illustration.photo_selector.vars.id }}").value == "") {
					document.getElementById("{{ form.illustration.photo_selector.vars.id }}").value = data.image.url;
					document.getElementById("{{ form.illustration.license.vars.id }}").value = data.image.license;
					document.getElementById("{{ form.illustration.author.vars.id }}").value = data.image.user;
					document.getElementById("{{ form.illustration.urlSource.vars.id }}").value = data.image.url;

					if(data.image.description != null)
						tinymce.get("{{ form.illustration.caption.vars.id }}").setContent(data.image.description);
				}
					
				document.querySelector('#wikidata .fa-arrows-rotate').classList.remove("fa-spin");
			}
		};
		
		xmlHttp.overrideMimeType("application/json");
		xmlHttp.open("GET", "{{ path('WebDirectory_Admin_Wikidata') }}?locale=" + locale + "&code=" + code, true);
		xmlHttp.send();
	});
</script>
{% import "admin/GenericAdmin/macro.html.twig" as macro_admin %}

<div class="form-table-cell form-table-cell-head">{{ form_label(form.title, "episodeTelevisionSerie.admin.Title"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.title) }}{{ form_widget(form.title, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">
{{ form_label(form.synopsis, "episodeTelevisionSerie.admin.Synopsis"|trans([], "validators")) }}
</div>
<div class="form-table-cell">
	{{ macro_admin.import_wikipedia(form.synopsis.vars.id, form.source.vars.id) }}
	{{ form_errors(form.synopsis) }}{{ form_widget(form.synopsis) }}
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.duration, "episodeTelevisionSerie.admin.Duration"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.duration) }}{{ form_widget(form.duration, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.season, "episodeTelevisionSerie.admin.Season"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.season) }}{{ form_widget(form.season, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.episodeNumber, "episodeTelevisionSerie.admin.EpisodeNumber"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.episodeNumber) }}{{ form_widget(form.episodeNumber, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.fullStreaming, "episodeTelevisionSerie.admin.FullStreaming"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.fullStreaming) }}{{ form_widget(form.fullStreaming, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.source, "episodeTelevisionSerie.admin.Sources"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.source) }}{{ form_widget(form.source, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.releaseDate, "episodeTelevisionSerie.admin.ReleaseDate"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.releaseDate) }}{{ form_widget(form.releaseDate, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head d-none">{{ form_label(form.televisionSerie, "episodeTelevisionSerie.admin.TelevisionSerie"|trans([], "validators")) }}</div>
<div class="form-table-cell d-none">{{ form_errors(form.televisionSerie) }}{{ form_widget(form.televisionSerie, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.episodeTelevisionSerieBiographies, "biographies.admin.Biographies"|trans([], "validators")) }}</div>
<div class="form-table-cell">
    <ul id="biography-fields-list"
        data-prototype="{{ form_widget(form.episodeTelevisionSerieBiographies.vars.prototype)|e }}"
        data-widget-tags="{{ '<li></li>'|e }}"
        data-widget-counter="{{ form.episodeTelevisionSerieBiographies|length }}"
		class="list-unstyled">
		{% for movieBiographyField in form.episodeTelevisionSerieBiographies %}
			<li class="border p-2 bg-light mb-2 clearfix container-form-biography">
				<div data-wikidata="{{ movieBiographyField.vars.value.biography.wikidata }}" data-title="{{ movieBiographyField.vars.value.biography.title }}" data-international-name="{{ movieBiographyField.vars.value.biography.internationalName }}">
					{{ form_errors(movieBiographyField) }}
					
					{{ form_label(movieBiographyField.biography, "biographies.admin.Biography"|trans([], "validators")) }}
					{{ form_widget(movieBiographyField.biography) }}
					
					{{ form_label(movieBiographyField.occupation, "biographies.admin.Occupation"|trans([], "validators")) }}
					{{ form_widget(movieBiographyField.occupation) }}
					
					{{ form_label(movieBiographyField.role, "biographies.admin.Role"|trans([], "validators")) }}
					{{ form_widget(movieBiographyField.role) }}
					
					{{ form_widget(artistBiographyField.internationalName) }}
				</div>
			</li>
		{% endfor %}
	</ul>
	
    <button type="button"
        class="add-another-collection-widget btn btn-success float-right"
        data-list-selector="#biography-fields-list"><i class="fas fa-plus"></i></button>
		
	<div class="d-none">
	{% if entity.id is null and not form.episodeTelevisionSerieBiographies.isRendered() %}
		{{ form_widget(form.episodeTelevisionSerieBiographies) }}
	{% endif %}
	</div>
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.wikidata, "Wikidata") }}</div>
<div class="form-table-cell">
	<div class="input-group">{{ form_errors(form.wikidata) }}{{ form_widget(form.wikidata, { 'attr': {'class': 'form-control'}}) }}
		<div class="input-group-append">
			<button id="wikidata" class="btn btn-outline-secondary" type="button"><i class="fas fa-sync"></i></button>
		</div>
	</div>
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.tags, "tag.admin.Tags"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.tags) }}{{ form_widget(form.tags, { 'attr': {'class': 'form-control', 'value': get_tags(entity, false) } }) }}</div>

{% include 'quotation/BiographyAdmin/_validateBiographyModal.html.twig' %}

<script>
	$(function() {
		$(".container-form-biography select.list-occupation").each(function() {
			$(this).parent().children(".role-biography").show();
			if($(this).val() != "{{ constant('App\\Entity\\Movies\\MediaInterface::ACTOR_OCCUPATION') }}")
				$(this).parent().children(".role-biography").hide();
		});
		$(document).on("change", ".container-form-biography select.list-occupation", function() {
			$(this).closest(".container-form-biography").find(".role-biography").show();

			if($(this).val() != "{{ constant('App\\Entity\\Movies\\MediaInterface::ACTOR_OCCUPATION') }}")
				$(this).closest(".container-form-biography").find(".role-biography").hide();
		});
		
		document.getElementById("wikidata").addEventListener("click", (e) => {
			e.preventDefault();

			let locale = {{ entity.televisionSerie.language.id }};
			let code = document.getElementById("{{ form.wikidata.vars.id }}").value;

			if (code == "")
				return;

			let xmlHttp = new XMLHttpRequest();
			
			document.querySelector("#wikidata .fa-sync").classList.add("fa-spin");
			
			xmlHttp.onreadystatechange = function() {
				if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
					let data = JSON.parse(xmlHttp.responseText);
					
					if(document.getElementById("{{ form.title.vars.id }}").value != "")
						document.getElementById("{{ form.title.vars.id }}").value = data.title;
						
					document.getElementById("url_{{ form.synopsis.vars.id }}").value = data.url;
					document.getElementById("url_{{ form.synopsis.vars.id }}").dispatchEvent(new Event("change"));
					
					document.querySelector("#wikidata .fa-sync").classList.remove("fa-spin");
				}
			}
			
			xmlHttp.overrideMimeType("application/json");
			xmlHttp.open("GET", "{{ path('EpisodeTelevisionSerie_Admin_Wikidata') }}?locale=" + locale + "&code=" + code, true);
			xmlHttp.send();
		});
	});
</script>
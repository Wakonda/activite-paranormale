{% import "admin/GenericAdmin/macro.html.twig" as macro_admin %}

<div class="form-table-cell form-table-cell-head">{{ form_label(form.title, "eventMessage.admin.Title"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.title) }}{{ form_widget(form.title, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.abstractText, "eventMessage.admin.AbstractText"|trans([], "validators")) }}</div>
<div class="form-table-cell">
	{{ macro_admin.import_wikipedia(form.abstractText.vars.id, form.source.vars.id) }}
	{{ form_errors(form.abstractText) }}{{ form_widget(form.abstractText) }}
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.text, "eventMessage.admin.Text"|trans([], "validators")) }}</div>
<div class="form-table-cell">
	{{ macro_admin.import_wikipedia(form.text.vars.id) }}
	{{ form_errors(form.text) }}{{ form_widget(form.text) }}
</div>

{{ macro_admin.wikidata_html_generic(form) }}
{{ macro_admin.import_wikidata_generic(form.wikidata.vars.id, form.language.vars.id, form.title.vars.id, form.text.vars.id, form.illustration) }}

<div class="form-table-cell form-table-cell-head">{{ form_label(form.type, "eventMessage.admin.Type"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.type) }}{{ form_widget(form.type, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.language, "eventMessage.admin.Language"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.language) }}{{ form_widget(form.language, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.dateFrom, "eventMessage.admin.DateFrom"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.dateFrom) }}{{ form_widget(form.dateFrom, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.dateTo, "eventMessage.admin.DateTo"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.dateTo) }}{{ form_widget(form.dateTo, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.pseudoUsed, "eventMessage.admin.PseudoUsed"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.pseudoUsed) }}{{ form_widget(form.pseudoUsed, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.licence, "eventMessage.admin.Licence"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.licence) }}{{ form_widget(form.licence, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.state, "eventMessage.admin.State"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.state) }}{{ form_widget(form.state, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.illustration, "eventMessage.admin.Photo"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.illustration) }}{{ form_widget(form.illustration) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.thumbnail, "eventMessage.admin.Thumbnail"|trans([], "validators")) }}</div>
<div class="form-table-cell">
	{{ form_errors(form.thumbnail) }}{{ form_widget(form.thumbnail) }}
	<br>
	{{ form_widget(form.thumbnail_selector) }}
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.theme, "eventMessage.admin.Theme"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.theme) }}{{ form_widget(form.theme, { 'attr': {'class': 'form-select'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.latitude, "eventMessage.admin.Latitude"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.latitude) }}{{ form_widget(form.latitude, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.longitude, "eventMessage.admin.Longitude"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.longitude) }}{{ form_widget(form.longitude, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.source, "eventMessage.admin.Source"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.source) }}{{ form_widget(form.source) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.tags, "tag.admin.Tags"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.tags) }}{{ form_widget(form.tags, { 'attr': {'class': 'form-control', 'value': get_tags(entity, false) } }) }}</div>

<script>
	document.getElementById("wikidata").addEventListener("click", (e) => {
		e.preventDefault();
		let locale = document.getElementById("{{ form.language.vars.id }}").value;
		let code = document.getElementById("{{ form.wikidata.vars.id }}").value;

		if (code == "")
			return;

		let xmlHttp = new XMLHttpRequest();
		
		document.querySelector('#wikidata .fa-arrows-rotate').classList.add("fa-spin");
		
		xmlHttp.onreadystatechange = function() {
			if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
				let data = JSON.parse(xmlHttp.responseText);

				if(data.length == 0)
					return;
				document.getElementById("{{ form.title.vars.id }}").value = data.title;
				document.getElementById("{{ form.dateFrom.day.vars.id }}").value = data.dateFrom.day;
				document.getElementById("{{ form.dateFrom.month.vars.id }}").value = data.dateFrom.month;
				document.getElementById("{{ form.dateFrom.year.vars.id }}").value = data.dateFrom.year;
				
				document.getElementById("url_{{ form.text.vars.id }}").value = data.url;
				document.getElementById("url_{{ form.text.vars.id }}").dispatchEvent(new Event("change"));
				
				document.getElementById("url_{{ form.abstractText.vars.id }}").value = data.url;
				document.getElementById("url_{{ form.abstractText.vars.id }}").dispatchEvent(new Event("change"));
				
				document.getElementById("{{ form.longitude.vars.id }}").value = data.longitude;
				document.getElementById("{{ form.latitude.vars.id }}").value = data.latitude;

				if(document.getElementById("{{ form.illustration.photo_selector.vars.id }}").value == "") {
					document.getElementById("{{ form.illustration.photo_selector.vars.id }}").value = data.image.url;
					document.getElementById("{{ form.illustration.license.vars.id }}").value = data.image.license;
					document.getElementById("{{ form.illustration.author.vars.id }}").value = data.image.user;
					document.getElementById("{{ form.illustration.urlSource.vars.id }}").value = data.image.url;
					
					if(data.image.description != null)
						tinymce.get("{{ form.illustration.caption.vars.id }}").setContent(data.image.description);
				}
					
				document.querySelector('#wikidata .fa-arrows-rotate').classList.remove("fa-spin");
			}
		};
		
		xmlHttp.overrideMimeType("application/json");
		xmlHttp.open("GET", "{{ path('EventMessage_Admin_Wikidata') }}?locale=" + locale + "&code=" + code, true);
		xmlHttp.send();
	});
</script>
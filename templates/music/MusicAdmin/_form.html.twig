{% import "admin/GenericAdmin/macro.html.twig" as macro_admin %}

<div class="modal fade selectMusicFileModal" id="selectMusicFileModal_{{ form.vars.id }}" tabindex="-1" role="dialog" aria-labelledby="selectMusicFileModalLabel_{{ form.vars.id }}" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title w-100 fw-bold">{{ "video.admin.ChooseAnExistingFile"|trans([], "validators") }}</h2>
			</div>
			<div class="modal-body">
				<div class="text-center">
					<i class="fas fa-spinner fa-pulse"></i>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fas fa-times"></i></button>
			</div>
		</div>
	</div>
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.language, "music.admin.Language"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.language) }}{{ form_widget(form.language, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.linkMusic, "music.admin.LinkMusic"|trans([], "validators")) }}</div>
<div class="form-table-cell">
	{{ form_widget(form.linkMusic, { 'attr': {'class': 'form-control'} }) }}
	
	<div class="mt-2">
		<div id="{{ form.album.vars.id }}_container">
			{{ form_widget(form.album, { 'attr': {'class': 'form-control'} }) }}
		</div>
		<div id="{{ form.artist.vars.id }}_container">
			{{ form_widget(form.artist, { 'attr': {'class': 'form-control'} }) }}
		</div>
	</div>
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.musicPieceFile, "music.admin.File"|trans([], "validators")) }}</div>
<div class="form-table-cell musicContainer">
	<ul class="nav nav-tabs mb-3" id="pills-tab" role="tablist">
		<li class="nav-item" role="presentation">
			<a class="nav-link active" id="pills-audio-tab" data-bs-toggle="pill" href="#pills-audio" role="tab" aria-controls="pills-audio" aria-selected="true"><i class="fas fa-headphones fa-fw"></i> {{ "music.admin.AudioFile"|trans([], "validators") }}</a>
		</li>
		<li class="nav-item" role="presentation">
			<a class="nav-link" id="pills-video-tab" data-bs-toggle="pill" href="#pills-video" role="tab" aria-controls="pills-video" aria-selected="false"><i class="fas fa-video fa-fw"></i> {{ "music.admin.Video"|trans([], "validators") }}</a>
		</li>
	</ul>
	<div class="tab-content" id="pills-tabContent">
		<div class="tab-pane fade show active" id="pills-audio" role="tabpanel" aria-labelledby="pills-audio-tab">
			{{ form_errors(form.musicPieceFile) }}

			{{ form_widget(form.musicPieceFile, { 'attr': {'class': 'form-control music_piece_file'} }) }}
			{{ form_widget(form.music_selector, {'attr':{'class': 'existing_music_colorbox form-control'}}) }}
		</div>
		<div class="tab-pane fade" id="pills-video" role="tabpanel" aria-labelledby="pills-video-tab">
			{{ form_errors(form.embeddedCode) }}
			{{ form_label(form.embeddedCode, "music.admin.EmbeddedCode"|trans([], "validators")) }}
			{{ form_widget(form.embeddedCode, { 'attr': {'class': 'form-control'} }) }}
		</div>
	</div>
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.musicPiece, "music.admin.Morceau"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.musicPiece) }}{{ form_widget(form.musicPiece, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.secondDuration, "music.admin.Duration"|trans([], "validators")) }}</div>
<div class="form-table-cell">
	{{ form_errors(form.secondDuration) }}
	<div class="form-group-inline">
		<div class="row">
			<div class="col-md-4 col-sm-4">
				<div class="input-group">
					{{ form_widget(form.hourDuration, { 'attr': {'class': 'form-control'}}) }}
					<div class="input-group-append">
						<span class="input-group-text">{{ "video.admin.HoursEdit"|trans([], "validators") }}</span>
					</div>
				</div>
			</div>
			<div class="col-md-4 col-sm-4">
				<div class="input-group">
					{{ form_widget(form.minuteDuration, { 'attr': {'class': 'form-control'}}) }}
					<div class="input-group-append">
						<span class="input-group-text">{{ "video.admin.MinutesEdit"|trans([], "validators") }}</span>
					</div>
				</div>
			</div>
			<div class="col-md-4 col-sm-4">
				<div class="input-group">
					{{ form_widget(form.secondDuration, { 'attr': {'class': 'form-control'}}) }}
					<div class="input-group-append">
						<span class="input-group-text">{{ "video.admin.SecondsEdit"|trans([], "validators") }}</span>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

{{ macro_admin.wikidata_html_generic(form) }}

<div class="form-table-cell form-table-cell-head">{{ form_label(form.text, "music.admin.Text"|trans([], "validators")) }}</div>
<div class="form-table-cell">
	{{ macro_admin.import_wikipedia(form.text.vars.id, form.source.vars.id) }}
	{{ form_errors(form.text) }}{{ form_widget(form.text) }}
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.musicBiographies, "biographies.admin.GuestMusicians"|trans([], "validators")) }}</div>
<div class="form-table-cell">
    <ul id="biography-fields-list"
        data-prototype="{{ form_widget(form.musicBiographies.vars.prototype)|e }}"
        data-widget-tags="{{ '<li></li>'|e }}"
        data-widget-counter="{{ form.musicBiographies|length }}"
		class="list-unstyled">
		{% for biographyField in form.musicBiographies %}
			<li class="border p-2 bg-light mb-2 clearfix container-form-biography">
				<div data-wikidata="{{ biographyField.vars.value.biography.wikidata }}" data-title="{{ biographyField.vars.value.biography.title }}" data-international-name="{{ biographyField.vars.value.biography.internationalName }}">
					{{ form_errors(biographyField) }}
					
					{{ form_label(biographyField.biography, "biographies.admin.Biography"|trans([], "validators")) }}
					{{ form_widget(biographyField.biography) }}
					
					{{ form_label(biographyField.occupation, "biographies.admin.Occupation"|trans([], "validators")) }}
					{{ form_widget(biographyField.occupation) }}
					
					{{ form_label(biographyField.role, "biographies.admin.Role"|trans([], "validators")) }}
					{{ form_widget(biographyField.role) }}
					
					{{ form_widget(biographyField.internationalName) }}
					{{ form_widget(biographyField.wikidata) }}
				</div>
			</li>
		{% endfor %}
	</ul>
	
    <button type="button"
        class="add-another-collection-widget btn btn-success float-end"
        data-list-selector="#biography-fields-list"><i class="fas fa-plus"></i></button>
		
	<div class="d-none">
	{% if entity.id is null and not form.musicBiographies.isRendered() %}
		{{ form_widget(form.musicBiographies) }}
	{% endif %}
	</div>
</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.identifiers, "music.admin.Identifiers"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.identifiers) }}{{ form_widget(form.identifiers, { 'attr': {'class': 'form-control'} }) }}</div>

<div class="form-table-cell form-table-cell-head">{{ form_label(form.source, "music.admin.Sources"|trans([], "validators")) }}</div>
<div class="form-table-cell">{{ form_errors(form.source) }}{{ form_widget(form.source, { 'attr': {'class': 'form-control'} }) }}</div>

{% include 'quotation/BiographyAdmin/_validateBiographyModal.html.twig' with { languageId: form.language.vars.id } %}

<script>
	document.getElementById("wikidata").addEventListener("click", (e) => {
		e.preventDefault();

		let locale = document.getElementById("{{ form.language.vars.id }}").value;
		let code = document.getElementById("{{ form.wikidata.vars.id }}").value;

		if (code == "")
			return;

		let xmlHttp = new XMLHttpRequest();
		
		document.querySelector("#wikidata .fa-arrows-rotate").classList.add("fa-spin");
		
		xmlHttp.onreadystatechange = function() {
			if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
				let data = JSON.parse(xmlHttp.responseText);
				
				document.getElementById("{{ form.musicPiece.vars.id }}").value = data.title;
				
				if(typeof data.embeddedCode !== "undefined")
					document.getElementById("{{ form.embeddedCode.vars.id }}").value = data.embeddedCode;
				document.getElementById("url_{{ form.text.vars.id }}").value = data.url;
				document.getElementById("url_{{ form.text.vars.id }}").dispatchEvent(new Event("change"));

				editor{{ form.identifiers.vars.id }}.setValue(data.identifiers)
				document.getElementById("{{ form.identifiers.vars.id }}").value = JSON.stringify(data.identifiers);
				reload{{ form.identifiers.vars.id }}(data);
				
				if(typeof data.duration !== "undefined") {
					let unitString = data.duration.unitString.split(":");
					
					document.getElementById("{{ form.hourDuration.vars.id }}").value = unitString[0];
					document.getElementById("{{ form.minuteDuration.vars.id }}").value = unitString[1];
					document.getElementById("{{ form.secondDuration.vars.id }}").value = unitString[2];
				}
				
				document.querySelector("#wikidata .fa-arrows-rotate").classList.remove("fa-spin");
			}
		}
		
		xmlHttp.overrideMimeType("application/json");
		xmlHttp.open("GET", "{{ path('Music_Admin_Wikidata') }}?locale=" + locale + "&code=" + code, true);
		xmlHttp.send();
	});

	function linkMusic(val) {
		document.getElementById("{{ form.album.vars.id }}_container").style.display = "none";
		document.getElementById("{{ form.artist.vars.id }}_container").style.display = "none";
		document.getElementById("{{ form.album.vars.id }}").value = "";
		document.getElementById("{{ form.artist.vars.id }}").value = "";
		
		if(val== "album") {
			document.getElementById("{{ form.album.vars.id }}_container").style.display = "block";
			$('#{{ form.album.vars.id }}').select2();
			
		} else if(val == "artist") {
			document.getElementById("{{ form.artist.vars.id }}_container").style.display = "block";
			$('#{{ form.artist.vars.id }}').select2();
		}
	}
	
	{% if entity.album is empty and entity.artist is empty %}
		linkMusic(document.getElementById("{{ form.linkMusic.vars.id }}").value);
	{% elseif entity.album is not empty %}
		document.getElementById("{{ form.artist.vars.id }}_container").style.display = "none";
	{% elseif entity.artist is not empty %}
		document.getElementById("{{ form.album.vars.id }}_container").style.display = "none";
	
	{% endif %}

	document.getElementById("{{ form.linkMusic.vars.id }}").addEventListener("change", (e) => {
		linkMusic(e.target.value);
	});
</script>
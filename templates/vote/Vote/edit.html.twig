<link href="{{ asset('extended/js/bootstrap-star-rating/css/star-rating.min.css') }}" media="all" rel="stylesheet" type="text/css" />
<script src="{{ asset('extended/js/bootstrap-star-rating/js/star-rating.min.js') }}"></script>
<script src="{{ asset('extended/js/bootstrap-star-rating/js/locales/' ~ app.request.locale ~ '.js') }}"></script>
<link rel="stylesheet" href="{{ asset('extended/js/bootstrap-star-rating/css/theme.min.css') }}" />
<script src="{{ asset('extended/js/bootstrap-star-rating/js/theme.min.js') }}"></script>

<div class="star_rate mt-2">
	{{ form_start(form, {'attr': {'class' : 'star_rating', 'id' : form.vars.id, novalidate: 'novalidate'}}) }}
		<div class="row alert alert-dark no-gutters">
			<div class="col-sm mt-1">
			{{ form_widget(form.valueVote) }}
			</div>
			<div class="col-sm text-right">
				<span id="resultVote">
					{% apply spaceless %}
					{{ "vote.edit.AverageScore"|trans([], "validators") }} <span class="averageVote">{{ averageVote|round(1) }}</span>
					(<span class="badge badge-danger countVoteByClassName">{{ countVoteByClassName }}</span>

					{% if countVoteByClassName <= 1 %} 
						{{ "vote.edit.Vote"|trans([], "validators") }}
					{% else %}
						{{ "vote.edit.Votes"|trans([], "validators") }}
					{% endif %}
					)
					{% endapply %}
				</span>
				<button type="submit" title="rating" id="rate" class="btn btn-secondary text-white">{{ "vote.edit.VoteSubmit"|trans([], "validators") }}</a>
			</div>
		</div>
	{{ form_end(form) }}
</div>

<script>
	$(function() {
		$('#{{ form.valueVote.vars.id }}').rating({
			hoverOnClear: false,
			theme: 'krajee-fas',
			containerClass: 'is-star',
			language: "{{ app.request.locale }}",
			defaultCaption: "{rating}",
			starCaptions: function(val) {
				val
			}
		});
		
		document.getElementById("{{ form.vars.id }}").addEventListener("submit", (e) => {
			e.preventDefault();
			
			let form = document.querySelector('#{{ form.vars.id }}');
			let formData = new FormData(form);
			
			var xmlHttp = new XMLHttpRequest();
			xmlHttp.onreadystatechange = function()
			{
				if(xmlHttp.readyState == 4 && xmlHttp.status == 200)
				{
					var data = JSON.parse(xmlHttp.responseText);
					document.querySelector(".averageVote").innerHTML = data.averageVote;
					document.querySelector('.countVoteByClassName').innerHTML = data.countVoteByClassName;
					$("#{{ form.valueVote.vars.id }}").rating('update', data.averageVote);
				}
			}

			xmlHttp.open("post", "{{ path('Vote_Edit', { 'idClassName' : idClassName, 'className': className }) }}"); 
			xmlHttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
			xmlHttp.overrideMimeType("application/json");
			xmlHttp.send(formData);
		});
	});
</script>
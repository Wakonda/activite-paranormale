{% macro tinymce(selector) %}
	<link rel="stylesheet" href="{{ asset('extended/js/tinymce/js/tinymce/prism/prism-okaidia.min.css') }}" />

	{% set language = null %}
	{% if app.request.locale == "fr" %}
		{% set language = "fr_FR" %}
	{% elseif app.request.locale == "es" %}
		{% set language = "es" %}
	{% endif %}

	<script>
	tinymce.init({
		selector:'{{ selector }}',
		codesample_languages: [
			{text: 'Batch', value: 'batch'},
			{text: 'C', value: 'c'},
			{text: 'C#', value: 'csharp'},
			{text: 'C++', value: 'cpp'},
			{text: 'CSS', value: 'css'},
			{text: 'HTML/XML', value: 'markup'},
			{text: 'Java', value: 'java'},
			{text: 'JavaScript', value: 'javascript'},
			{text: 'PHP', value: 'php'},
			{text: 'Python', value: 'python'},
			{text: 'Ruby', value: 'ruby'},
			{text: 'SQL', value: 'sql'},
			{text: 'Visual Basic', value: 'visual-basic'}
		],
		height: 250,
		{% if language is not null %}
			language: '{{ language }}',
		{% endif %}
		menubar: false,
		statusbar: false,
		browser_spellcheck: true,
		plugins: 'lists link image charmap media code codesample',
		toolbar: 'bold italic underline | link | undo redo | bullist | code codesample',
		setup: function (editor) {
			editor.on('change', function () {
				tinymce.triggerSave();
			});
		},
		codesample_content_css: "{{ asset('extended/js/tinymce/js/tinymce/prism/prism-okaidia.min.css') }}"
	});
	</script>
{% endmacro %}

{% macro tagify(selector) %}
	<link rel="stylesheet" type="text/css" href="{{ asset('extended/js/tagify/tagify.min.css') }}" media="screen" />
	<script src="{{ asset('extended/js/tagify/tagify.min.js') }}"></script>

	<script>
		var input = document.querySelector('{{ selector }}');
		new Tagify(input, {enforceWhitelist: false});
	</script>
{% endmacro %}

{% macro updateListForm(form) %}
	document.getElementById("{{ form.language.vars.id }}").addEventListener("change", function() {
		var xhr = new XMLHttpRequest();
		xhr.open("POST", "{{ path('UsefulLink_Admin_ReloadThemeByLanguage') }}", true);

		xhr.onreadystatechange = function() {
			if (xhr.readyState === 4 && xhr.status === 200) {
				var data = JSON.parse(xhr.responseText);

				var licenceSelect = document.getElementById("{{ form.licence.vars.id }}");
				licenceSelect.innerHTML = "";
				data.licence.forEach(function(element) {
					var option = document.createElement("option");
					option.value = element.id;
					option.text = element.title;
					licenceSelect.appendChild(option);
				});
			}
		};

		var formData = new FormData();
		formData.append("id", this.value);

		xhr.send(formData);
	});
{% endmacro %}
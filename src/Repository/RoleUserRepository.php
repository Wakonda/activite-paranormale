<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * RoleUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoleUserRepository extends EntityRepository
{
	// ADMINISTRATION
	public function getDatatablesForIndexAdmin($iDisplayStart, $iDisplayLength, $sortByColumn, $sortDirColumn, $sSearch, $searchByColumns, $count = false)
	{
		$aColumns = array( 'r.id', 'r.title', 'r.internationalName', 'r.id');

		$qb = $this->createQueryBuilder('r');
		$qb
		   ->orderBy($aColumns[$sortByColumn[0]], $sortDirColumn[0]);

		if(!empty($sSearch))
		{
			$search = "%".$sSearch."%";
			foreach($aColumns as $column)
			{
				$qb->orWhere($column." LIKE :search")
				   ->setParameter('search', $search);
			}
		}
		
		if(!empty($searchByColumns))
		{
			$aSearchColumns = $aColumns;
			for($i = 0; $i < count($aSearchColumns); $i++)
			{
				if(!empty($searchByColumns[$i]))
				{
					$search = "%".$searchByColumns[$i]."%";
					$qb->andWhere($aSearchColumns[$i]." LIKE :searchByColumn".$i)
					   ->setParameter("searchByColumn".$i, $search);
				}
			}
		}
		
		if($count)
		{
			$qb->select("count(r)");
			return $qb->getQuery()->getSingleScalarResult();
		}
		else
			$qb->setFirstResult($iDisplayStart)->setMaxResults($iDisplayLength);

		return $qb->getQuery()->getResult();
	}
}
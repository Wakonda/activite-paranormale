<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TagsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagsRepository extends EntityRepository
{
	public function getEntitiesByTags($id, $locale, $count = false)
	{
		$qb = $this->createQueryBuilder('t');

		$qb->leftjoin('t.tagWord', 'tw')
		   ->join('tw.language', 'l')
		   ->where('tw.id = :id')
		   ->andWhere('l.abbreviation = :locale')
		   ->setParameter('locale', $locale)
		   ->setParameter('id', $id);

		if($count)
		{
			$qb->select('COUNT(t)');
			return $qb->getQuery()->getSingleScalarResult();
		}

		return $qb->getQuery()->getResult();
	}

	public function getDatatablesForSearchTagsAdmin($tagWord, $locale, $iDisplayStart, $iDisplayLength, $sSearch, $count = false)
	{
		$qb = $this->createQueryBuilder('t');

		$qb->leftjoin('t.tagWord', 'tw')
		   ->join('tw.language', 'l')
		   ->where('tw.id = :id')
		   ->andWhere('l.abbreviation = :locale')
		   ->setParameter('locale', $locale)
		   ->setParameter('id', $tagWord->getId());
		
		if(!empty($sSearch))
		{
			$search = "%".$sSearch."%";
			$qb->andWhere("tw.title LIKE :search")
			   ->setParameter('search', $search);
		}
		if($count)
		{
			$qb->select("count(t)");
			return $qb->getQuery()->getSingleScalarResult();
		}
		else
			$qb->setFirstResult($iDisplayStart)->setMaxResults($iDisplayLength);

		return $qb->getQuery()->getResult();
	}
}

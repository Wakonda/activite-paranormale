<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ArtistBiography
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArtistBiographyRepository extends EntityRepository
{
	public function getArtistsByBiography($biography)
	{
		$qb = $this->createQueryBuilder("mb");

		$qb->select("m.title AS artistTitle, m.id AS artistId, GROUP_CONCAT(mb.occupation SEPARATOR '|') AS occupations")
		   ->where("mb.biography = :biography")
		   ->setParameter("biography", $biography)
		   ->join("mb.artist", "m")
		   ->groupBy("mb.artist")
		   ->addGroupBy("mb.biography");

		return $qb->getQuery()->getResult();
	}

	public function getBiographiesByArtist($artist)
	{
		$qb = $this->createQueryBuilder("mb");
		
		$qb->select("b.id AS biographyId, b.title AS biographyTitle, IFNULL(mb.role, b.title) AS stageName, a.id AS artistId")
		   ->addSelect("GROUP_CONCAT(DISTINCT mb.occupation SEPARATOR '#') AS occupations")
		   ->addSelect("GROUP_CONCAT(mb.startYear, ' - ', IFNULL(mb.endYear, '') ORDER BY mb.startYear SEPARATOR '#') AS years")
		   ->addSelect("IF(MAX(IFNULL(mb.endYear,'9999')) = '9999', '', mb.endYear) AS lastYear")
		   ->where("mb.artist = :artist")
		   ->setParameter("artist", $artist)
		   ->join("mb.artist", "a")
		   ->join("mb.biography", "b")
		   ->groupBy("a.title")
		   ->addGroupBy("b.title");
		   
		$datas = ["current" => [], "former" => []];   
		
		foreach($qb->getQuery()->getResult() as $res) {
			$res["occupations"] = explode("#", $res["occupations"]);
			
			$years = explode(" - ", $res["years"]);
			$res["years"] =  (isset($years[0]) ? (new \App\Service\APDate())->doPartialDate($years[0], "fr") : "")." - ".(isset($years[1]) ? (new \App\Service\APDate())->doPartialDate($years[1], "fr") : "");

			if(empty($res["lastYear"]))
				$datas["current"][] = $res;
			else
				$datas["former"][] = $res;
		}

		return $datas;
	}
}